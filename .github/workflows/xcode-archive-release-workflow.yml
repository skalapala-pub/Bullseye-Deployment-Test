name: Xcode Archive and Release Build

on:
  workflow_dispatch:

jobs:
  build:
    name: Create Archive, IPA, and release build
    runs-on: build-runner

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      
      - name: Create Archive
        env:
          scheme: ${{ 'default' }}
        run: |
          if [ $scheme = default ]; then scheme=$(cat default); fi

          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`

          xcodebuild clean archive \
          -scheme "$scheme" \
          -"$filetype_parameter" "$file_to_build" \
          -configuration release \
          -sdk iphoneos \
          -destination generic/platform=iOS \
          -archivePath ./exportOutputData/result.xcarchive | xcpretty && exit ${PIPESTATUS[0]}

      - name: Upload Symbols and Info.plist Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Symbols and Info.plist
          path: |
            ./exportOutputData/result.xcarchive/dSYMs
            ./exportOutputData/result.xcarchive/Info.plist

      - name: Create IPA
        run: |
          xcodebuild -exportArchive \
          -archivePath ./exportOutputData/result.xcarchive \
          -exportPath ./exportOutputData/ \
          -exportOptionsPlist ./exportInputData/export.plist

      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v3
        with:
          name: IPA file
          path: .exportOutputData/**.ipa

    